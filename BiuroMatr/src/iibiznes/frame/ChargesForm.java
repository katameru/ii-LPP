/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ChargesForm.java
 *
 * Created on Jun 14, 2012, 11:41:43 PM
 */
package iibiznes.frame;

import iibiznes.fields.BoardInfo;
import iibiznes.fields.FieldInfo;
import iibiznes.game.Field;
import iibiznes.game.Game;
import java.awt.Color;

/**
 *
 * @author grzes
 */
public class ChargesForm extends javax.swing.JPanel
{

    /** Creates new form ChargesForm */
    public ChargesForm(Game game)
    {
        this.game = game;
        initComponents();
        setEditorPane();
        fillCombo();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboTopics = new javax.swing.JComboBox();
        lblTopic = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        editor = new javax.swing.JEditorPane();

        comboTopics.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTopicsItemStateChanged(evt);
            }
        });

        lblTopic.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        lblTopic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTopic.setText("Topic");

        jScrollPane1.setViewportView(editor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(comboTopics, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                    .addComponent(lblTopic, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboTopics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboTopicsItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_comboTopicsItemStateChanged
    {//GEN-HEADEREND:event_comboTopicsItemStateChanged
        choice();
    }//GEN-LAST:event_comboTopicsItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboTopics;
    private javax.swing.JEditorPane editor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTopic;
    // End of variables declaration//GEN-END:variables

    private void fillCombo()
    {
        FieldInfo[] fi = BoardInfo.getFields();
        for (FieldInfo f: fi)
            if (   f.type.equalsIgnoreCase("topic")
                || f.type.equalsIgnoreCase("other") )
            {
                comboTopics.addItem(f.name);
            }
    }

    private void setEditorPane()
    {
        editor.setContentType("text/plain");
        editor.setEditable(false);
    }
    
    private void choice()
    {
        String topic = comboTopics.getSelectedItem().toString();
        Field[] fields = game.getFields();
        Field field = null;
        for (int i = 0; i < fields.length; ++i)
        {
            if (fields[i].getFieldInfo().name.equals(topic))
            {
                field = fields[i];
                break;
            }
        }
        if (field == null)
        {
            System.err.println("No such topic \"" + topic + "\".");
        }
        setContent(field);
    }
    
    private void setContent(Field field)
    {
        if (field == null)
        {
            editor.setText("");
            lblTopic.setText("");    
            return ;
        }
        editor.setText(field.getDescription());
        lblTopic.setText(field.getFieldInfo().name);
        if (field.getFieldInfo().type.equalsIgnoreCase("topic"))
            lblTopic.setForeground(BoardInfo.topicToSubject(field.getFieldInfo().name).color);
        else lblTopic.setForeground(Color.DARK_GRAY);
    }
    
    Game game;
}
