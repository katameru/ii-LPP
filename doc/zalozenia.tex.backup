\documentclass[a4paper, 12pt]{article}
\usepackage{fancyhdr}
\usepackage[MeX]{polski}
\usepackage[utf8]{inputenc}
\usepackage{amsmath,amsthm,amssymb}
\usepackage{graphicx}
\usepackage{multirow}
\usepackage[lmargin=2.7cm]{geometry}
\usepackage{color}

\pagestyle{fancy}
\lhead{\textbf{Wtomigraj} -- Opis architektury}
\rhead{\bfseries}

\author{Marcin Januszkiewicz, Grzegorz Łoś}
\title{\textbf{Wtomigraj} -- Założenia ogólne}

\input{titlepage.sty}

\begin{document}

\newtitle{Założenia ogólne}

\break

\setcounter{page}{2}

\tableofcontents

\break

\section{Wstęp}

\subsection{Cel dokumentu}
Poniższy dokument opisuje ogólne założenia dotyczące platformy Wtomigraj. Przedstawiamy tu profil potencjalnych użytkowników oraz podstawowe przypadki użycia. W dokumencie zebrane są istotne cechy oprogramowania Wtomigraj oraz stawiane przed nim wymagania. Szczegółowe informacje na temat projektu i protokołu stosowanego przez platformę można znaleźć z załączonym dokumencie ,,Wtomigraj -- Opis architektury''. Ponadto dołączamy opisy dwóch gier stworzonych przy użyciu platformy Wtomigraj.

\subsection{Dlaczego Wtomigraj}
Wśród użytkowników internetu można zaobserwować znaczne zapotrzebowanie na prostą rozrywkę, na przykład w postaci gier internetowych. Zazwyczaj są one używane w chwilach przerwy od innych działań, pomagając przez jakiś czas odetchnąć od wykonywanej pracy. Zaletą tych gier w stosunku do gier ze sklepowych półek są: intuicyjne sterowanie i nieskomplikowane zasady, a~także ich bezpłatność oraz fakt, że gry internetowe nie wymagają żadnego instalowania. W odpowiedzi na oczekiwania internautów, w Sieci znalazło się wiele portali z grami. Jednak większość z nich oferuje jedynie gry dla pojedynczego gracza. Tymczasem rosnącą popularnością cieszą się gry wieloosobowe, w~których gracze mogą rywalizować z innymi ludźmi. Wtomigraj wychodzi naprzeciw temu zapotrzebowaniu przedstawiając wygodne API do tworzenia gier sieciowych.

\section[Opis użytkownika]{Opis użytkownika}

\subsection[Opis użytkowników]{Opis użytkowników}
Użytkownikami naszej platformy są programiści, który będą korzystać z udostępnionej biblioteki do tworzenia własnych gier sieciowych. Dzięki niej będą mogli skupić się na implementowaniu istoty gry bez konieczności martwienia się o szczegóły komunikacji między graczami. 

\subsection[Dane statystyczne dot. użytkowników i rynku]{Dane statystyczne dotyczące użytkowników i rynku}
Jak podaje portal http://www.tiobe.com język Java, w którym napisana jest nasza biblioteka jest obecnie drugim co do popularności językiem programowania. Oznacza to, że liczba programistów, którzy mogą zainteresować się naszą platformą jest bardzo duża.

\subsection[Podstawowe potrzeby użytkownika]{Podstawowe potrzeby użytkownika}
Podstawową potrzebą użytkowników platformy jest otrzymanie prostej w użyciu biblioteki programistycznej, dzięki której nie będą musieli samemu programować komunikacji między dwoma komputerami w sieci. Biblioteka powinna być prosta, tak by nie trzeba było wiele czasu poświęcać nauce jej używania, a także elastyczna, tak by programista nie był ograniczony przy tworzeniu własnej gry.

\section[Ogólny opis produktu]{Ogólny opis produktu}
Wtomigraj jest platformą programistyczną, służącą tworzeniu aplikacji internetowych, które umożliwią skomunikowanie się dwóch lub więcej komputerów w Internecie, w celu odbycia wspólnej gry.

\subsection[Schemat produktu]{Schemat produktu}
Wtomigraj składa się z dwóch części. Pierwszą jest serwer, który pośredniczy w nawiązaniu połączenia między aplikacjami graczy. Drugą częścią jest biblioteka zawierająca klasę klienta. Pozwala ona zmniejszyć narzut programistyczny na wykorzystanie możliwości serwera poprzez dostarczenie odpowiednich klas i funkcji do komunikacji z serwerem. Programista gry nie musi przykładowo wnikać w szczegóły opracowanego przez nas protokołu, wystarczy wywoływać odpowiednie metody biblioteczne. 

\subsection[Podsumowanie możliwości]{Podsumowanie możliwości}
Platforma Wtomigraj jest olbrzymim ułatwieniem dla programisty gdyż:
\begin{itemize}
 \item niesie ze sobą gotowy program serwera, który może obsługiwać powstające gry,
 \item ma zaimplementowany protokół komunikacji na liniach klient-serwer oraz klient-klient,
 \item daje programiście wygodny interfejs do wysyłania danych pomiędzy klientami na różnych komputerach,
 \item nie wnosi niemal żadnych ograniczeń na rodzaj gier jakie mogą powstawć przy użyciu tej platformy.
\end{itemize}

\subsection[Założenia i zależności]{Założenia i zależności}
Aby kompilować kod oparty o platformę Wtomigraj potrzebne jest JDK co najmniej w wersji 5. Ponadto platforma Wtomigraj korzysta z biblioteki JSON, którą pobrać będzie musiał także programista gry.

\section[Cechy produktu]{Cechy produktu}
\paragraph{Serwer obsługuje wiele gier.} Dzięki temu wystarczy uruchomić jeden serwer, aby równoczesnie obsługiwać, np. szachistów i brydżystów.
\paragraph{Dodawanie nowych gier do serwera.} Wystarczy zedytować prosty plik konfiguracyjny.
\paragraph{Komunikacja klient-serwer.} Jest kompletna i użytkownik naszej platformy nie musi się nią martwić.
\paragraph{Komunikacja klient-klient.} Realizowane jest nawiązywanie połączenia pomiędzy klientami, a także wysyłanie pakietów w formacie JSON pomiędzy nimi. Programiście gry pozostaje zaimplementować zapis i odczyt danych gry z pakietu JSON.

\paragraph{Odnajdywanie ludzi, którzy są zainteresowani zagraniem w nasz}

\section[Podstawowe przypadki użycia]{Podstawowe przypadki użycia}

\section{Inne wymagania}
\subsection{Licencjonowanie i instalacja.}
Kod udostępniony jest na licencji GNU GPL. Dzięki temu programiści korzystają z naszej platformy bezpłatnie, jednak powstające opragramowanie również musi być darmowo dostępne dla użytkowników końcowych. Liczymy, że dzięki takiej licencji zyska ona na popularności. Aby korzystać z platformy Wtomigraj wystarczy pobrać pakiet wtomigraj.jar. 


\subsection{Wymagania efektywnościowe}
Biblioteka musi umożliwiać szybką komunikację dlatego tworzymy projekt korzystając z protokołu UDP, a nie TCP, który choć jest wygodniejszy wiążę się z większym narzutem czasownym.

\subsection[Wymagania dokumentacyjne]{Wymagania dokumentacyjne}
Kod źródłowy przechowywany będzie w repozytorium GIT. Wraz z nim będzie znajdować się aktualna wersja dokumentacji, zarówno jako komentarze w kodzie źródłowym, a także jako osobny dokument opis całej architektury systemu. Ponadto każdy commit do repozytorium obowiązkowo musi zawierać opis zmian.

\end{document} 